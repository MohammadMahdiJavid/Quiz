@page "/MyForm"

@inject ILocalStorage LocalStorage
@inject NavigationManager NavigationManager
@inject HttpClient client
@inject UserModel loggined_user

<link rel="stylesheet" href="http://localhost:6001/Register/style1.css">
<link rel="stylesheet" href="http://localhost:6001/Register/style2.css">
<link rel="stylesheet" href="http://localhost:6001/Register/style3.css">
<link rel="stylesheet" type="text/css" href="http://localhost:6001/Register/style4.css">
<link href="http://localhost:6001/Register/style5.css" rel="stylesheet" id="bootstrap-css">

@* FORM *@
<div class="row" style="width: 100%; height: 100%; position: absolute; top: 25%; left: 0;">
    <div class="col-md-6 col-md-offset-3">
        <div class="panel panel-login">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-xs-6">
                        <button class="btn btn-default btn-rounded" @onclick="@state_login" id="login-form-link ">Login</button>
                    </div>
                    <div class="col-xs-6">
                        <button class="btn btn-default btn-rounded" @onclick="@state_register" id="register-form-link">Register</button>
                    </div>
                </div>
                <hr>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-12">
                        <EditForm Model="@LoginUser" OnValidSubmit="@Login" id="login-form" action="" method="post" role="form" style="@login_state" >
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                                <div class="form-group text-center">
                                    <div class="row" style="color: red; justify-content: center;">
                                        <b> @login_msg </b>
                                    </div>
                                </div>

                            <div class="form-group">
                                <InputText type="email" name="email" id="email" tabindex="1" class="form-control" placeholder="Email" @bind-Value="@LoginUser.Email" />
                            </div>

                            <div class="form-group">
                                <InputText type="password" name="password" id="password" tabindex="2" class="form-control" placeholder="Password" @bind-Value="@LoginUser.Password" />
                            </div>

                            <div class="form-group text-center">
                            </div>

                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-6 col-sm-offset-3">
                                        <button type="submit" name="login-submit" id="login-submit" tabindex="4" class="form-control btn btn-login" value="Log In">
                                            LOG IN
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="text-center">
                                            <a @onclick="@state_backup" tabindex="5" class="forgot-password">Forgot Password?</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </EditForm>

                        <EditForm Model="@RegisterUser" OnValidSubmit="@Register" id="register-form" action="" method="post" role="form" style="@register_state" >
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <InputText type="email" name="email" id="email" tabindex="1" class="form-control" placeholder="Email Address" @bind-Value="@RegisterUser.Email" />
                            </div>
                            <div class="form-group">
                                <InputText type="password" name="password" id="password" tabindex="2" class="form-control" placeholder="Password" @bind-Value="@RegisterUser.Password" />
                            </div>
                            <div class="form-group">
                                <InputText type="password" name="confirm-password" id="confirm-password" tabindex="2" class="form-control" placeholder="Confirm Password" @bind-Value="@RegisterUser.ConfirmPassword" />
                            </div>
                            <div class="form-group">
                                <InputText type="backup" name="backup-question" id="backup-question" tabindex="3" class="form-control" placeholder="BackUp Question" @bind-Value="@RegisterUser.BackupQuestion" />
                            </div>
                            <div class="form-group">
                                <InputText type="backup" name="backup-answer" id="backup-answer" tabindex="4" class="form-control" placeholder="BackUp Answer" @bind-Value="@RegisterUser.BackupAnswer" />
                            </div>

                                <div class="form-group text-center">
                                    <div class="row" style="color: red; justify-content: center;">
                                        <b> @register_msg </b>
                                    </div>
                                </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-6 col-sm-offset-3">
                                        <button type="submit" name="register-submit" id="register-submit" tabindex="4" class="form-control btn btn-register" value="Register Now">
                                            Register Now
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </EditForm>

                        <EditForm Model="@BackupUser" OnValidSubmit="@BackUp" id="register-form" action="" method="post" role="form" style="@backup_state" >
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                                <div class="form-group text-center">
                                    <div class="row" style="color: red; justify-content: center;">
                                        <b> @Password </b>
                                    </div>
                                </div>

                            <div class="form-group">
                                <InputText type="email" name="email" id="email" tabindex="1" class="form-control" placeholder="Email Address" @bind-Value="@BackupUser.Email" />
                            </div>
                            <div class="form-group">
                                <InputText type="backup" name="backup-question" id="backup-question" tabindex="2" class="form-control" placeholder="BackUp Question" @bind-Value="@BackupUser.BackupQuestion" />
                            </div>
                            <div class="form-group">
                                <InputText type="backup" name="backup-answer" id="backup-answer" tabindex="3" class="form-control" placeholder="BackUp Answer" @bind-Value="@BackupUser.BackupAnswer" />
                            </div>
                            <div class="form-group">
                                <div class="row">
                                    <div class="col-sm-6 col-sm-offset-3">
                                        <button type="submit" name="register-submit" id="register-submit" tabindex="4" class="form-control btn btn-register" value="Register Now">
                                            Show Password
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </EditForm>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@* FORM *@

<script type="@type" suppress-error="BL9992" src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
<script type="@type" suppress-error="BL9992" src="//code.jquery.com/jquery-1.11.1.min.js"></script>

@code
{
    [Parameter]
    public string type { get; set; } = "text/javascript";
    public LoginModel LoginUser {get; set;} = new LoginModel();
    public string login_msg {get; set;} = string.Empty; 
    public async Task Login()
    {
        string uri = @"http://localhost:6001/api/users/login";
        HttpResponseMessage register_response = await client.PostAsJsonAsync<LoginModel>(uri, this.LoginUser);
        if ((int)register_response.StatusCode == 200)
        {
            UserModel temp = register_response.Content.ReadFromJsonAsync<UserModel>().Result;
            temp.IsAuthorized = true;
            await LocalStorage.SetItem<UserModel>("token", temp);
            loggined_user.equalnew(temp);
            NavigationManager.NavigateTo("/");
        }
        else
            login_msg = "Wrong Email or Password";
    }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public BackUpModel BackupUser {get; set;} = new BackUpModel();
        public string Password {get; set;} = "";
        public async Task BackUp()
        {
            string uri = @"http://localhost:6001/api/users/find";
            HttpResponseMessage register_response = await client.PostAsJsonAsync<BackUpModel>(uri, this.BackupUser);
            if ((int)register_response.StatusCode == 200)
            {
                string temp = register_response.Content.ReadFromJsonAsync<UserModel>().Result.Password;
                Password = $"your password is : {temp}";
            }
            else
                Password = "USER NOT FOUND";
        }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public RegisterModel RegisterUser {get; set;} = new RegisterModel();
        public string register_msg {get; set;} = "";
        public async Task Register()
        {
            string uri = @"http://localhost:6001/api/users/register";
            HttpResponseMessage register_response = await client.PostAsJsonAsync<RegisterModel>(uri, this.RegisterUser);
            if ((int)register_response.StatusCode == 201)
            {
                register_msg = $"User {RegisterUser.Email} Successfuly Created";
                LoginUser = new LoginModel();
                (LoginUser.Email, LoginUser.Password) = (RegisterUser.Email, RegisterUser.Password);
                await Login();
            }
            else
                register_msg = $"{RegisterUser.Email} already used by another person";
        }
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        public string register_state {get; set;} = "display: block";
        public string login_state {get; set;} = "display: none";
        public string backup_state {get; set;} = "display: none";
        public void state_login() =>
            (register_state, login_state, backup_state) = ("display: none", "display: block", "display: none");
        public void state_register() =>
            (register_state, login_state, backup_state) = ("display: block", "display: none", "display: none");
        public void state_backup() => 
            (backup_state, register_state, login_state) = ("display: block", "display: none", "display: none");    
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}